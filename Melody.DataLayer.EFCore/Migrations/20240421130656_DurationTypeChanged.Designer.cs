// <auto-generated />
using System;
using Melody.DataLayer.EFCore.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Melody.DataLayer.EFCore.Migrations
{
    [DbContext(typeof(MelodyDbContext))]
    [Migration("20240421130656_DurationTypeChanged")]
    partial class DurationTypeChanged
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("FollowedAlbums", b =>
                {
                    b.Property<Guid>("FollowedAlbumsId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("FollowersId")
                        .HasColumnType("uuid");

                    b.HasKey("FollowedAlbumsId", "FollowersId");

                    b.HasIndex("FollowersId");

                    b.ToTable("FollowedAlbums");
                });

            modelBuilder.Entity("FollowedAudioBookCollections", b =>
                {
                    b.Property<Guid>("FollowedAudioBookCollectionsId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("FollowersId")
                        .HasColumnType("uuid");

                    b.HasKey("FollowedAudioBookCollectionsId", "FollowersId");

                    b.HasIndex("FollowersId");

                    b.ToTable("FollowedAudioBookCollections");
                });

            modelBuilder.Entity("FollowedAudioBooks", b =>
                {
                    b.Property<Guid>("FollowedAudioBooksId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("FollowersId")
                        .HasColumnType("uuid");

                    b.HasKey("FollowedAudioBooksId", "FollowersId");

                    b.HasIndex("FollowersId");

                    b.ToTable("FollowedAudioBooks");
                });

            modelBuilder.Entity("FollowedPlaylists", b =>
                {
                    b.Property<Guid>("FollowedPlaylistsId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("FollowersId")
                        .HasColumnType("uuid");

                    b.HasKey("FollowedPlaylistsId", "FollowersId");

                    b.HasIndex("FollowersId");

                    b.ToTable("FollowedPlaylists");
                });

            modelBuilder.Entity("FollowedPodcasts", b =>
                {
                    b.Property<Guid>("FollowedPodcastsId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("FollowersId")
                        .HasColumnType("uuid");

                    b.HasKey("FollowedPodcastsId", "FollowersId");

                    b.HasIndex("FollowersId");

                    b.ToTable("FollowedPodcasts");
                });

            modelBuilder.Entity("FollowedTracks", b =>
                {
                    b.Property<Guid>("FollowedTracksId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("FollowersId")
                        .HasColumnType("uuid");

                    b.HasKey("FollowedTracksId", "FollowersId");

                    b.HasIndex("FollowersId");

                    b.ToTable("FollowedTracks");
                });

            modelBuilder.Entity("GenredTracks", b =>
                {
                    b.Property<Guid>("GenredTracksId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("GenresId")
                        .HasColumnType("uuid");

                    b.HasKey("GenredTracksId", "GenresId");

                    b.HasIndex("GenresId");

                    b.ToTable("GenredTracks");
                });

            modelBuilder.Entity("Melody.DataLayer.EFCore.Entities.AlbumEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Coversheet")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatorId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("CreatorId");

                    b.ToTable("Albums");
                });

            modelBuilder.Entity("Melody.DataLayer.EFCore.Entities.AudioBookCollectionEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Coversheet")
                        .HasColumnType("text");

                    b.Property<Guid>("CreatorId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("PublishedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CreatorId");

                    b.ToTable("AudioBookCollections");
                });

            modelBuilder.Entity("Melody.DataLayer.EFCore.Entities.AudioBookEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("AudioBookCollectionId")
                        .IsRequired()
                        .HasColumnType("uuid");

                    b.Property<string>("AuthorName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Coversheet")
                        .HasColumnType("text");

                    b.Property<Guid>("CreatorId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("DurationInMs")
                        .HasColumnType("double precision");

                    b.Property<string>("Filename")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("ListeningsCount")
                        .HasColumnType("integer");

                    b.Property<DateTime>("PublishedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AudioBookCollectionId");

                    b.HasIndex("CreatorId");

                    b.ToTable("AudioBooks");
                });

            modelBuilder.Entity("Melody.DataLayer.EFCore.Entities.CreatorEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("RegisteredAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Verified")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("Creators");
                });

            modelBuilder.Entity("Melody.DataLayer.EFCore.Entities.GenreEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Coversheet")
                        .HasColumnType("text");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = new Guid("af44a2db-058b-4eec-953b-bd7946ee26e9"),
                            DisplayName = "Pop",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("9f3ee5f0-1d1b-470e-87fd-45cb4212afdd"),
                            DisplayName = "Rock",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("1726afd1-bf83-48b0-8d80-870e96fc3b41"),
                            DisplayName = "Hip-hop",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("96873495-32a0-4677-a8bd-c3feb497d0db"),
                            DisplayName = "R&B(Rhythm and Blues)",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("73beb0e8-4950-4c50-a61b-483d3e60cd43"),
                            DisplayName = "Jazz",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("d8a43dd1-a957-47af-b05d-178825dd0edd"),
                            DisplayName = "Blues",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("ba6b5a75-d8a6-485a-b58a-9e0216b8e62c"),
                            DisplayName = "Country",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("c161787e-86a5-40a7-927c-25569c72a757"),
                            DisplayName = "Reggae",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("6a198478-0992-4012-a22c-27a6b7b4a63a"),
                            DisplayName = "Electronic",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("4fa8e201-574d-4a55-80d1-8f6f30d5a5d0"),
                            DisplayName = "Classical",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("5be5c4f2-e1c3-41b7-af9b-5f7960ac74f1"),
                            DisplayName = "Folk",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("1a2a8545-5b0c-4c7c-b1a5-dfb6c4ab9e08"),
                            DisplayName = "Indie",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("e732a1b0-e4af-4840-a503-ce36d943d532"),
                            DisplayName = "Alternative",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("d9796e48-f17f-49e6-aa41-f346bbba7427"),
                            DisplayName = "Punk",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("2e8f8dd2-910b-4377-8a7f-971b3993e198"),
                            DisplayName = "Metal",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("f0b9d11b-18f7-4be4-aeb8-01d89e8b6289"),
                            DisplayName = "Dance",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("b2465c0a-ddd5-4604-bf36-38ff098212be"),
                            DisplayName = "Soul",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("e4725a70-64b0-473c-861d-d2608ba44e5d"),
                            DisplayName = "Funk",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("8fcd410a-a5d5-4982-aa24-a46561425092"),
                            DisplayName = "Gospel",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("4239081a-49bc-42c2-9984-7ca7dd7c62ab"),
                            DisplayName = "Disco",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("aa4da808-0ddb-46be-84a0-8a71b30136a2"),
                            DisplayName = "Ska",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("1d261e35-e9de-499c-9672-3c1c5b479654"),
                            DisplayName = "Dub",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("428737cf-b8a5-45e6-855f-0f103f12970e"),
                            DisplayName = "Techno",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("d7f308d0-c3a2-49ff-af07-de72c0f47c2a"),
                            DisplayName = "House",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("21162d99-f895-4069-94c7-7b2da58b98f5"),
                            DisplayName = "Ambient",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("38cfba62-3760-44fb-98ef-517c7709d559"),
                            DisplayName = "Trance",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("61fac485-88aa-4e59-8fd3-3a9820f3192b"),
                            DisplayName = "Rap",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("26ee440b-0ce8-4c95-8f18-b6b1913493ed"),
                            DisplayName = "Grunge",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("1a87efd1-e44e-49a9-a18c-6166b3feb9b7"),
                            DisplayName = "Reggaeton",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("cae4f090-18c5-4c04-8176-4951d7fc8b78"),
                            DisplayName = "Latin",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("18e73479-d8ac-45e4-98c7-0d0eb4af00c3"),
                            DisplayName = "Salsa",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("df8d56c9-03e9-46a2-91ec-1481d0e37017"),
                            DisplayName = "Flamenco",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("c86cfe7c-008c-4d0a-a32e-38854c9edaf4"),
                            DisplayName = "Bossa Nova",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("1f4f7577-bd5c-427b-90b6-82c8c6c72331"),
                            DisplayName = "Afrobeat",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("0bdee2fc-089a-4cca-bbdb-66bddaa33334"),
                            DisplayName = "Samba",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("90126fa8-e0d2-4cb6-897d-4dea249f14dc"),
                            DisplayName = "Bluegrass",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("c26db626-d853-4241-9bb7-bd6ab4b478b7"),
                            DisplayName = "Funk Rock",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("ce5aa8e4-7496-4112-b5f4-459db194a910"),
                            DisplayName = "Hard Rock",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("c1811630-d9bb-4ebb-9906-5de926b48c56"),
                            DisplayName = "Soft Rock",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("dd41de6a-d2b4-43ef-bb40-13d314eceed9"),
                            DisplayName = "Glam Rock",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("ff3ee462-a6a4-4df8-ab95-37e356105d4b"),
                            DisplayName = "Psychedelic Rock",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("56c5c137-6fa0-440a-b0c8-c2bb26c8ddfd"),
                            DisplayName = "Post-rock",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("7bd8791a-b9f2-4c58-84c8-383d531c1f1e"),
                            DisplayName = "Garage Rock",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("4056d6be-4251-4c98-9672-8682d20193c2"),
                            DisplayName = "Progressive Rock",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("c4de9314-9df3-453f-ac65-a06eaa35cc6c"),
                            DisplayName = "New Wave",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("25c9d357-81e0-4b26-af10-0acd81783dda"),
                            DisplayName = "Post-punk",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("4c8ca473-dde0-470f-8f11-60c73515e87d"),
                            DisplayName = "Shoegaze",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("ee99cb5b-abf4-4bd6-9b17-d0e717d76a3f"),
                            DisplayName = "Celtic",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("84b05a52-2885-4a68-bb2d-e1f84eca935a"),
                            DisplayName = "World Music",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("166a904f-5989-438e-ae38-2edce4e7dcc4"),
                            DisplayName = "Fusion",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("9ef5d7fe-8980-48a6-bc27-6316715f8cf6"),
                            DisplayName = "Experimental",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("010a3ec7-8a21-4fdf-8bc5-caca2e38a9a1"),
                            DisplayName = "IDM(Intelligent Dance Music)",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("c5631a5d-e05e-4727-8ecf-136fe4634060"),
                            DisplayName = "Synthpop",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("a0ee8fc0-38c6-432a-902a-d22199d3bfb2"),
                            DisplayName = "Electropop",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("266ae00e-5416-433c-8091-43d948368a14"),
                            DisplayName = "Trap",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("5e542567-46ba-4266-a9cb-fa56b7ebeec7"),
                            DisplayName = "Drill",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("45828dd8-abec-47fc-afc7-683d6835a8e3"),
                            DisplayName = "Breakbeat",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("0c357430-b6cf-47f8-aa77-fc3e9b6b8535"),
                            DisplayName = "Downtempo",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("17821076-e73a-4987-a416-387ba9130a9e"),
                            DisplayName = "Ambient House",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("4aae01d2-fa4f-4993-acf1-bbf65e4a08b9"),
                            DisplayName = "Dubstep",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("b8906844-d9ba-4dc2-83da-faf63ae871fb"),
                            DisplayName = "Future Bass",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("002fa52a-cf05-4afd-955b-9cedaafcef1b"),
                            DisplayName = "Grime",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("507e9c5a-9642-4414-b30f-d0db1a3a0ce0"),
                            DisplayName = "Trip-hop",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("8439c560-63d0-4a9d-a487-cb2289ea1e1e"),
                            DisplayName = "Nu Jazz",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("9106bbfa-8d6c-49d9-b4c8-685f4ad5e562"),
                            DisplayName = "Smooth Jazz",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("5ff8f789-b7e8-453f-9740-571b28a7dddc"),
                            DisplayName = "Swing",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("a825dc89-9e02-4269-99c8-b36bba8b6599"),
                            DisplayName = "Bebop",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("4cb6a6c5-b34b-43a8-92b6-8639f99731d3"),
                            DisplayName = "Big Band",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("2cc6e73b-1a9a-41db-a827-2b1d495320a5"),
                            DisplayName = "Orchestral",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("b194d0f4-1585-494d-b398-7dc4f3d34fd7"),
                            DisplayName = "Choral",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("aea16935-4e89-4c70-a240-06dfca216257"),
                            DisplayName = "Phonk",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("28330e8e-665f-4303-936c-61b4da117672"),
                            DisplayName = "Alternative Metal",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("d46c41ca-bde1-4dbc-89c3-ac9a8bd7ae5f"),
                            DisplayName = "Eurobeat",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("042d5c43-413d-42c7-9981-920b9ab00fc1"),
                            DisplayName = "Synthwave",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("58d25a56-2cb6-472a-840e-b23c82eb6d21"),
                            DisplayName = "Post-hardcore",
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("Melody.DataLayer.EFCore.Entities.PlaylistEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Coversheet")
                        .HasColumnType("text");

                    b.Property<Guid>("CreatorId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPublic")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("PublishedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<short>("Type")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("CreatorId");

                    b.ToTable("Playlists");
                });

            modelBuilder.Entity("Melody.DataLayer.EFCore.Entities.PodcastEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AuthorName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Coversheet")
                        .HasColumnType("text");

                    b.Property<Guid>("CreatorId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("DurationInMs")
                        .HasColumnType("double precision");

                    b.Property<string>("Filename")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("ListeningsCount")
                        .HasColumnType("integer");

                    b.Property<DateTime>("PublishedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CreatorId");

                    b.ToTable("Podcasts");
                });

            modelBuilder.Entity("Melody.DataLayer.EFCore.Entities.TagEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Coversheet")
                        .HasColumnType("text");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("Melody.DataLayer.EFCore.Entities.TrackEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("AlbumId")
                        .HasColumnType("uuid");

                    b.Property<string>("AuthorName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Coversheet")
                        .HasColumnType("text");

                    b.Property<Guid>("CreatorId")
                        .HasColumnType("uuid");

                    b.Property<double>("DurationInMs")
                        .HasColumnType("double precision");

                    b.Property<string>("Filename")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("ListeningsCount")
                        .HasColumnType("integer");

                    b.Property<DateTime>("PublishedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AlbumId");

                    b.HasIndex("CreatorId");

                    b.ToTable("Tracks");
                });

            modelBuilder.Entity("Melody.DataLayer.EFCore.Entities.UserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("RegisteredAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PlaylistedTracks", b =>
                {
                    b.Property<Guid>("PlaylistedTracksId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("PlaylistsId")
                        .HasColumnType("uuid");

                    b.HasKey("PlaylistedTracksId", "PlaylistsId");

                    b.HasIndex("PlaylistsId");

                    b.ToTable("PlaylistedTracks");
                });

            modelBuilder.Entity("TaggedPlaylists", b =>
                {
                    b.Property<Guid>("TaggedPlaylistsId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("TagsId")
                        .HasColumnType("uuid");

                    b.HasKey("TaggedPlaylistsId", "TagsId");

                    b.HasIndex("TagsId");

                    b.ToTable("TaggedPlaylists");
                });

            modelBuilder.Entity("FollowedAlbums", b =>
                {
                    b.HasOne("Melody.DataLayer.EFCore.Entities.AlbumEntity", null)
                        .WithMany()
                        .HasForeignKey("FollowedAlbumsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Melody.DataLayer.EFCore.Entities.UserEntity", null)
                        .WithMany()
                        .HasForeignKey("FollowersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FollowedAudioBookCollections", b =>
                {
                    b.HasOne("Melody.DataLayer.EFCore.Entities.AudioBookCollectionEntity", null)
                        .WithMany()
                        .HasForeignKey("FollowedAudioBookCollectionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Melody.DataLayer.EFCore.Entities.UserEntity", null)
                        .WithMany()
                        .HasForeignKey("FollowersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FollowedAudioBooks", b =>
                {
                    b.HasOne("Melody.DataLayer.EFCore.Entities.AudioBookEntity", null)
                        .WithMany()
                        .HasForeignKey("FollowedAudioBooksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Melody.DataLayer.EFCore.Entities.UserEntity", null)
                        .WithMany()
                        .HasForeignKey("FollowersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FollowedPlaylists", b =>
                {
                    b.HasOne("Melody.DataLayer.EFCore.Entities.PlaylistEntity", null)
                        .WithMany()
                        .HasForeignKey("FollowedPlaylistsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Melody.DataLayer.EFCore.Entities.UserEntity", null)
                        .WithMany()
                        .HasForeignKey("FollowersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FollowedPodcasts", b =>
                {
                    b.HasOne("Melody.DataLayer.EFCore.Entities.PodcastEntity", null)
                        .WithMany()
                        .HasForeignKey("FollowedPodcastsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Melody.DataLayer.EFCore.Entities.UserEntity", null)
                        .WithMany()
                        .HasForeignKey("FollowersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FollowedTracks", b =>
                {
                    b.HasOne("Melody.DataLayer.EFCore.Entities.TrackEntity", null)
                        .WithMany()
                        .HasForeignKey("FollowedTracksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Melody.DataLayer.EFCore.Entities.UserEntity", null)
                        .WithMany()
                        .HasForeignKey("FollowersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GenredTracks", b =>
                {
                    b.HasOne("Melody.DataLayer.EFCore.Entities.TrackEntity", null)
                        .WithMany()
                        .HasForeignKey("GenredTracksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Melody.DataLayer.EFCore.Entities.GenreEntity", null)
                        .WithMany()
                        .HasForeignKey("GenresId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Melody.DataLayer.EFCore.Entities.AlbumEntity", b =>
                {
                    b.HasOne("Melody.DataLayer.EFCore.Entities.CreatorEntity", "Creator")
                        .WithMany("Albums")
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("Melody.DataLayer.EFCore.Entities.AudioBookCollectionEntity", b =>
                {
                    b.HasOne("Melody.DataLayer.EFCore.Entities.CreatorEntity", "Creator")
                        .WithMany("AudioBooksCollection")
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("Melody.DataLayer.EFCore.Entities.AudioBookEntity", b =>
                {
                    b.HasOne("Melody.DataLayer.EFCore.Entities.AudioBookCollectionEntity", "AudioBookCollection")
                        .WithMany("AudioBooks")
                        .HasForeignKey("AudioBookCollectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Melody.DataLayer.EFCore.Entities.CreatorEntity", "Creator")
                        .WithMany("AudioBooks")
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AudioBookCollection");

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("Melody.DataLayer.EFCore.Entities.CreatorEntity", b =>
                {
                    b.HasOne("Melody.DataLayer.EFCore.Entities.UserEntity", "User")
                        .WithOne("Creator")
                        .HasForeignKey("Melody.DataLayer.EFCore.Entities.CreatorEntity", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Melody.DataLayer.EFCore.Entities.PlaylistEntity", b =>
                {
                    b.HasOne("Melody.DataLayer.EFCore.Entities.CreatorEntity", "Creator")
                        .WithMany("Playlists")
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("Melody.DataLayer.EFCore.Entities.PodcastEntity", b =>
                {
                    b.HasOne("Melody.DataLayer.EFCore.Entities.CreatorEntity", "Creator")
                        .WithMany("Podcasts")
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("Melody.DataLayer.EFCore.Entities.TrackEntity", b =>
                {
                    b.HasOne("Melody.DataLayer.EFCore.Entities.AlbumEntity", "Album")
                        .WithMany("AlbumedTracks")
                        .HasForeignKey("AlbumId");

                    b.HasOne("Melody.DataLayer.EFCore.Entities.CreatorEntity", "Creator")
                        .WithMany("Tracks")
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Album");

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("PlaylistedTracks", b =>
                {
                    b.HasOne("Melody.DataLayer.EFCore.Entities.TrackEntity", null)
                        .WithMany()
                        .HasForeignKey("PlaylistedTracksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Melody.DataLayer.EFCore.Entities.PlaylistEntity", null)
                        .WithMany()
                        .HasForeignKey("PlaylistsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TaggedPlaylists", b =>
                {
                    b.HasOne("Melody.DataLayer.EFCore.Entities.PlaylistEntity", null)
                        .WithMany()
                        .HasForeignKey("TaggedPlaylistsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Melody.DataLayer.EFCore.Entities.TagEntity", null)
                        .WithMany()
                        .HasForeignKey("TagsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Melody.DataLayer.EFCore.Entities.AlbumEntity", b =>
                {
                    b.Navigation("AlbumedTracks");
                });

            modelBuilder.Entity("Melody.DataLayer.EFCore.Entities.AudioBookCollectionEntity", b =>
                {
                    b.Navigation("AudioBooks");
                });

            modelBuilder.Entity("Melody.DataLayer.EFCore.Entities.CreatorEntity", b =>
                {
                    b.Navigation("Albums");

                    b.Navigation("AudioBooks");

                    b.Navigation("AudioBooksCollection");

                    b.Navigation("Playlists");

                    b.Navigation("Podcasts");

                    b.Navigation("Tracks");
                });

            modelBuilder.Entity("Melody.DataLayer.EFCore.Entities.UserEntity", b =>
                {
                    b.Navigation("Creator")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
